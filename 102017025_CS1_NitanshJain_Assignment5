{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNnlNY4iez1PGregwfHWr9l"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":538,"metadata":{"id":"IGhlmfJYM7JZ","executionInfo":{"status":"ok","timestamp":1662885971125,"user_tz":-330,"elapsed":721,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.linear_model import LinearRegression, Ridge, Lasso\n","from sklearn.metrics import r2_score"]},{"cell_type":"markdown","source":["### Question 1\n"],"metadata":{"id":"zjgHr2M1MKvw"}},{"cell_type":"code","source":["x = np.array([i * np.pi/180 for i in range(60,300,4)])\n","np.random.seed(10)\n","y = np.sin(x) + np.random.normal(0,0.15,len(x))"],"metadata":{"id":"ZyglxkKcYShV","executionInfo":{"status":"ok","timestamp":1662885972093,"user_tz":-330,"elapsed":6,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}}},"execution_count":539,"outputs":[]},{"cell_type":"code","source":["df = pd.DataFrame(np.column_stack([x,y]), columns=['x','y'])"],"metadata":{"id":"fRPNkkD6zFhF","executionInfo":{"status":"ok","timestamp":1662885972094,"user_tz":-330,"elapsed":5,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}}},"execution_count":540,"outputs":[]},{"cell_type":"code","source":["for i in range(2,16):\n","    colname = 'x_%d'%i\n","    df[colname] = df[\"x\"]**i"],"metadata":{"id":"GTJG2RLrzTxe","executionInfo":{"status":"ok","timestamp":1662885973219,"user_tz":-330,"elapsed":1130,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}}},"execution_count":541,"outputs":[]},{"cell_type":"code","source":["print(df.head())"],"metadata":{"id":"vYp2iTENzf2h","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1662885973220,"user_tz":-330,"elapsed":44,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"0bc59fab-d10a-4eca-ed79-19a8e3aadfff"},"execution_count":542,"outputs":[{"output_type":"stream","name":"stdout","text":["          x         y       x_2       x_3       x_4       x_5       x_6  \\\n","0  1.047198  1.065763  1.096623  1.148381  1.202581  1.259340  1.318778   \n","1  1.117011  1.006086  1.247713  1.393709  1.556788  1.738948  1.942424   \n","2  1.186824  0.695374  1.408551  1.671702  1.984016  2.354677  2.794587   \n","3  1.256637  0.949799  1.579137  1.984402  2.493673  3.133642  3.937850   \n","4  1.326450  1.063496  1.759470  2.333850  3.095735  4.106339  5.446854   \n","\n","        x_7       x_8        x_9       x_10       x_11       x_12       x_13  \\\n","0  1.381021  1.446202   1.514459   1.585938   1.660790   1.739176   1.821260   \n","1  2.169709  2.423588   2.707173   3.023942   3.377775   3.773011   4.214494   \n","2  3.316683  3.936319   4.671717   5.544505   6.580351   7.809718   9.268760   \n","3  4.948448  6.218404   7.814277   9.819710  12.339811  15.506664  19.486248   \n","4  7.224981  9.583578  12.712139  16.862020  22.366630  29.668222  39.353420   \n","\n","        x_14       x_15  \n","0   1.907219   1.997235  \n","1   4.707635   5.258479  \n","2  11.000386  13.055521  \n","3  24.487142  30.771450  \n","4  52.200353  69.241170  \n"]}]},{"cell_type":"code","source":["X = df.drop([\"y\"], axis=1)\n","Y = df.iloc[:,1]"],"metadata":{"id":"OieL99syzrVq","executionInfo":{"status":"ok","timestamp":1662885973220,"user_tz":-330,"elapsed":40,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}}},"execution_count":543,"outputs":[]},{"cell_type":"code","source":["Y[0:5]"],"metadata":{"id":"3fDQTg4LqtTL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1662885973221,"user_tz":-330,"elapsed":40,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"4473b898-24e8-4d14-9b26-5ef16551ff3e"},"execution_count":544,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    1.065763\n","1    1.006086\n","2    0.695374\n","3    0.949799\n","4    1.063496\n","Name: y, dtype: float64"]},"metadata":{},"execution_count":544}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","X_scaled = scaler.fit_transform(X)\n","Y = np.asarray(Y).reshape(-1,1)"],"metadata":{"id":"6PCIuzYK0LxO","executionInfo":{"status":"ok","timestamp":1662885973221,"user_tz":-330,"elapsed":28,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}}},"execution_count":545,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train, x_test, y_train, y_test = train_test_split(X_scaled, Y, test_size=0.3, random_state=42)\n","print(\"x_train.shape = \", x_train.shape)\n","print(\"x_test.shape = \", x_test.shape)\n","print(\"y_train.shape = \", y_train.shape)\n","print(\"y_test.shape = \", y_test.shape)\n","x_train.shape[1]\n"],"metadata":{"id":"aWH9uJSL0c6I","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1662885973221,"user_tz":-330,"elapsed":27,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"d7688ac8-fd05-4294-ee0c-4fc841e42fe9"},"execution_count":546,"outputs":[{"output_type":"stream","name":"stdout","text":["x_train.shape =  (42, 15)\n","x_test.shape =  (18, 15)\n","y_train.shape =  (42, 1)\n","y_test.shape =  (18, 1)\n"]},{"output_type":"execute_result","data":{"text/plain":["15"]},"metadata":{},"execution_count":546}]},{"cell_type":"code","source":["learning_rate = [0.0001, 0.001, 0.01, 0.1, 1, 10]\n","lambda_val = [pow(10, -5), pow(10, -3), 0, 1, 10, 20]\n","x_test = np.insert(x_test, 0, values=1, axis=1)\n"],"metadata":{"id":"E08Og84KPcCj","executionInfo":{"status":"ok","timestamp":1662885973222,"user_tz":-330,"elapsed":18,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}}},"execution_count":547,"outputs":[]},{"cell_type":"code","source":["n = len(x_train)\n","max_r2_score_func = -1\n","r2_score_func_list = list()\n","beta_list = list()\n","\n","x_train = np.insert(x_train, 0, values=1, axis=1)\n","\n","for m in lambda_val:\n","    A = x_train.T.dot(x_train)\n","    I = np.identity(A.shape[0])\n","    B = A + m * I\n","    C = np.linalg.inv(B)\n","    D = C.dot(x_train.T)\n","    beta = D.dot(y_train)\n","            \n","    # beta = np.array(beta).reshape(-1,1)\n","    y_pred = x_test.dot(beta)\n","\n","    error = y_test - y_pred\n","    sq_err = np.power(error, 2)\n","\n","    sum_sq_err = np.sum(sq_err)\n","    mse = sum_sq_err/len(y_pred)\n","    rmse = np.sqrt(mse)\n","\n","    y_mean = np.mean(y_test)\n","    total_variance = np.sum((y_test-y_mean)**2)\n","\n","    r2_score_func = (1-sum_sq_err/total_variance)\n","    r2_score_func_list.append(r2_score_func)\n","    beta_list.append(beta)\n","\n","\n","index = r2_score_func_list.index(max(r2_score_func_list))\n","beta = beta_list[index]\n","max_r2_score_func = max(r2_score_func_list)\n","best_lambda = lambda_val[index]\n","\n","print(max_r2_score_func)\n","print(beta)\n","print(best_lambda)\n","r2_score_func_list \n"],"metadata":{"id":"17iKtVFQQoSu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1662885973222,"user_tz":-330,"elapsed":17,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"c7f8932d-1a32-4c06-9f69-4aa9e012cbef"},"execution_count":548,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9880291811035271\n","[[ 4.11118724e-02]\n"," [ 1.05223468e+00]\n"," [-1.88564994e+00]\n"," [-8.27540335e-01]\n"," [ 7.19097388e-02]\n"," [ 1.86399149e-01]\n"," [-1.36591153e-02]\n"," [-1.17875521e-01]\n"," [-1.53584220e-03]\n"," [ 2.67552207e-01]\n"," [ 5.50712121e-01]\n"," [ 7.13100936e-01]\n"," [ 6.54561362e-01]\n"," [ 3.14916284e-01]\n"," [-3.31926596e-01]\n"," [-1.28698727e+00]]\n","0.001\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.9841023758542777,\n"," 0.9880291811035271,\n"," 0.7212585468303871,\n"," 0.9786583529754274,\n"," 0.9626828290574647,\n"," 0.9352075593290385]"]},"metadata":{},"execution_count":548}]},{"cell_type":"code","source":["num_iter = 5\n","r2_score_func_list = list()\n","beta_list = list()\n","learning_rate_list = list()\n","nn = len(x_train)\n","\n","for ln in learning_rate:\n","    for jn in range(num_iter):\n","\n","        x0_grad = 0\n","        x1_grad = 0\n","        x2_grad = 0\n","        x3_grad = 0\n","        x4_grad = 0\n","        x5_grad = 0\n","        x6_grad = 0\n","        x7_grad = 0\n","        x8_grad = 0\n","        x9_grad = 0\n","        x10_grad = 0\n","        x11_grad = 0\n","        x12_grad = 0\n","        x13_grad = 0\n","        x14_grad = 0\n","        x15_grad = 0\n","\n","\n","\n","        for km in range(len(x_train)):\n","\n","            a = x_train[km,0]\n","            b = x_train[km,1]\n","            c = x_train[km,2]\n","            d = x_train[km,3]\n","            e = x_train[km,4]\n","            f = x_train[km,5]\n","            g = x_train[km,6]\n","            h = x_train[km,7]\n","            i = x_train[km,8]\n","            j = x_train[km,9]\n","            k = x_train[km,10]\n","            l = x_train[km,11]\n","            m = x_train[km,12]\n","            n = x_train[km,13]\n","            o = x_train[km,14]\n","            \n","            q = y_train[km,]\n","            # print(f)\n","            \n","            x0_grad += (beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o)  - q)\n","            \n","            x1_grad += ((beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o) - q) * a)\n","\n","            x2_grad += ((beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o) - q) * b)\n","            \n","            x3_grad += ((beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o) - q) * c)\n","            \n","            x4_grad += ((beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o) - q) * d)\n","            \n","            x5_grad += ((beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o) - q) * e)\n","            \n","            x6_grad += ((beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o) - q) * f)\n","            \n","            x7_grad += ((beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o) - q) * g)\n","            \n","            x8_grad += ((beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o) - q) * h)\n","            \n","            x9_grad += ((beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o) - q) * i)\n","            \n","            x10_grad += ((beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o) - q) * j)\n","\n","            x11_grad += ((beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o) - q) * k)\n","\n","            x12_grad += ((beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o) - q) * l)\n","\n","            x13_grad += ((beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o) - q) * m)\n","\n","            x14_grad += ((beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o) - q) * n)\n","            \n","            x15_grad += ((beta[0] + (beta[1]*a) + (beta[2]*b) + (beta[3]*c) + (beta[4]*d) + (beta[5]*e) +\n","                        (beta[6]*f) + (beta[7]*g) + (beta[8]*h) + (beta[9]*i) + (beta[10]*j) + \n","                        (beta[11]*k) + (beta[12]*l) + (beta[13]*m) + (beta[14]*n) + (beta[15]*o) - q) * o)\n","            \n","\n","        beta[0] = beta[0] - ln / nn * x0_grad\n","        beta[1] = beta[1] - ln / nn * x1_grad\n","        beta[2] = beta[2] - ln / nn * x2_grad\n","        beta[3] = beta[3] - ln / nn * x3_grad\n","        beta[4] = beta[4] - ln / nn * x4_grad\n","        beta[5] = beta[5] - ln / nn * x5_grad\n","        beta[6] = beta[6] - ln / nn * x6_grad\n","        beta[7] = beta[7] - ln / nn * x7_grad\n","        beta[8] = beta[8] - ln / nn * x8_grad\n","        beta[9] = beta[9] - ln / nn * x9_grad\n","        beta[10] = beta[10] - ln / nn * x10_grad\n","        beta[11] = beta[11] - ln / nn * x11_grad\n","        beta[12] = beta[12] - ln / nn * x12_grad\n","        beta[13] = beta[13] - ln / nn * x13_grad\n","        beta[14] = beta[14] - ln / nn * x14_grad\n","        beta[15] = beta[15] - ln / nn * x15_grad\n","\n","        beta_list.append(beta)\n","        beta = np.array(beta).reshape(-1,1)\n","        y_pred = x_test.dot(beta)\n","\n","        error = y_test - y_pred\n","        sq_err = np.power(error, 2)\n","\n","        sum_sq_err = np.sum(sq_err)\n","        mse = sum_sq_err/len(y_pred)\n","        rmse = np.sqrt(mse)\n","\n","        y_mean = np.mean(y_test)\n","        total_variance = np.sum((y_test-y_mean)**2)\n","\n","        r2_score_func = (1-sum_sq_err/total_variance)\n","        r2_score_func_list.append(r2_score_func)\n","        learning_rate_list.append(ln)\n","\n","index = r2_score_func_list.index(max(r2_score_func_list))\n","beta = beta_list[index]\n","max_r2_score_func = max(r2_score_func_list)\n","best_ln = learning_rate_list[index]\n","print(max_r2_score_func)\n","print(beta)\n","print(best_ln)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PN_4ok55K3NJ","executionInfo":{"status":"ok","timestamp":1662885974089,"user_tz":-330,"elapsed":874,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"3d213d99-aedd-4430-ce3f-121aeb628719"},"execution_count":549,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9880172165728036\n","[[ 4.10155437e-02]\n"," [ 1.05213835e+00]\n"," [-1.88556307e+00]\n"," [-8.27457086e-01]\n"," [ 7.19878367e-02]\n"," [ 1.86471865e-01]\n"," [-1.35914118e-02]\n"," [-1.17812268e-01]\n"," [-1.47646443e-03]\n"," [ 2.67608227e-01]\n"," [ 5.50765227e-01]\n"," [ 7.13151503e-01]\n"," [ 6.54609700e-01]\n"," [ 3.14962653e-01]\n"," [-3.31881979e-01]\n"," [-1.28694423e+00]]\n","0.0001\n"]}]},{"cell_type":"markdown","source":["### Question 2\n"],"metadata":{"id":"HbvpWX9HMHBT"}},{"cell_type":"code","source":["hitter_df = pd.read_csv('/content/Hitters.csv')"],"metadata":{"id":"tVwFJy3rMN3V","executionInfo":{"status":"ok","timestamp":1662885974090,"user_tz":-330,"elapsed":130,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}}},"execution_count":550,"outputs":[]},{"cell_type":"code","source":["hitter_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":268},"id":"JTBqZh6NMxer","executionInfo":{"status":"ok","timestamp":1662885974091,"user_tz":-330,"elapsed":129,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"1ed82a0f-45ec-4426-bfdb-97489fceeb51"},"execution_count":551,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   AtBat  Hits  HmRun  Runs  RBI  Walks  Years  CAtBat  CHits  CHmRun  CRuns  \\\n","0    293    66      1    30   29     14      1     293     66       1     30   \n","1    315    81      7    24   38     39     14    3449    835      69    321   \n","2    479   130     18    66   72     76      3    1624    457      63    224   \n","3    496   141     20    65   78     37     11    5628   1575     225    828   \n","4    321    87     10    39   42     30      2     396    101      12     48   \n","\n","   CRBI  CWalks League NewLeague Division  PutOuts  Assists  Errors  Salary  \n","0    29      14      A         A        E      446       33      20     NaN  \n","1   414     375      N         N        W      632       43      10   475.0  \n","2   266     263      A         A        W      880       82      14   480.0  \n","3   838     354      N         N        E      200       11       3   500.0  \n","4    46      33      N         N        E      805       40       4    91.5  "],"text/html":["\n","  <div id=\"df-2adb9022-37f3-4825-a488-cc93d9ce4d0d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AtBat</th>\n","      <th>Hits</th>\n","      <th>HmRun</th>\n","      <th>Runs</th>\n","      <th>RBI</th>\n","      <th>Walks</th>\n","      <th>Years</th>\n","      <th>CAtBat</th>\n","      <th>CHits</th>\n","      <th>CHmRun</th>\n","      <th>CRuns</th>\n","      <th>CRBI</th>\n","      <th>CWalks</th>\n","      <th>League</th>\n","      <th>NewLeague</th>\n","      <th>Division</th>\n","      <th>PutOuts</th>\n","      <th>Assists</th>\n","      <th>Errors</th>\n","      <th>Salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>293</td>\n","      <td>66</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>29</td>\n","      <td>14</td>\n","      <td>1</td>\n","      <td>293</td>\n","      <td>66</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>29</td>\n","      <td>14</td>\n","      <td>A</td>\n","      <td>A</td>\n","      <td>E</td>\n","      <td>446</td>\n","      <td>33</td>\n","      <td>20</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>315</td>\n","      <td>81</td>\n","      <td>7</td>\n","      <td>24</td>\n","      <td>38</td>\n","      <td>39</td>\n","      <td>14</td>\n","      <td>3449</td>\n","      <td>835</td>\n","      <td>69</td>\n","      <td>321</td>\n","      <td>414</td>\n","      <td>375</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>W</td>\n","      <td>632</td>\n","      <td>43</td>\n","      <td>10</td>\n","      <td>475.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>479</td>\n","      <td>130</td>\n","      <td>18</td>\n","      <td>66</td>\n","      <td>72</td>\n","      <td>76</td>\n","      <td>3</td>\n","      <td>1624</td>\n","      <td>457</td>\n","      <td>63</td>\n","      <td>224</td>\n","      <td>266</td>\n","      <td>263</td>\n","      <td>A</td>\n","      <td>A</td>\n","      <td>W</td>\n","      <td>880</td>\n","      <td>82</td>\n","      <td>14</td>\n","      <td>480.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>496</td>\n","      <td>141</td>\n","      <td>20</td>\n","      <td>65</td>\n","      <td>78</td>\n","      <td>37</td>\n","      <td>11</td>\n","      <td>5628</td>\n","      <td>1575</td>\n","      <td>225</td>\n","      <td>828</td>\n","      <td>838</td>\n","      <td>354</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>E</td>\n","      <td>200</td>\n","      <td>11</td>\n","      <td>3</td>\n","      <td>500.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>321</td>\n","      <td>87</td>\n","      <td>10</td>\n","      <td>39</td>\n","      <td>42</td>\n","      <td>30</td>\n","      <td>2</td>\n","      <td>396</td>\n","      <td>101</td>\n","      <td>12</td>\n","      <td>48</td>\n","      <td>46</td>\n","      <td>33</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>E</td>\n","      <td>805</td>\n","      <td>40</td>\n","      <td>4</td>\n","      <td>91.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2adb9022-37f3-4825-a488-cc93d9ce4d0d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2adb9022-37f3-4825-a488-cc93d9ce4d0d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2adb9022-37f3-4825-a488-cc93d9ce4d0d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":551}]},{"cell_type":"code","source":["hitter_df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"32p_LrzGMzWM","executionInfo":{"status":"ok","timestamp":1662885974091,"user_tz":-330,"elapsed":127,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"99e10803-15fc-467e-b765-be7b16b290c4"},"execution_count":552,"outputs":[{"output_type":"execute_result","data":{"text/plain":["AtBat         0\n","Hits          0\n","HmRun         0\n","Runs          0\n","RBI           0\n","Walks         0\n","Years         0\n","CAtBat        0\n","CHits         0\n","CHmRun        0\n","CRuns         0\n","CRBI          0\n","CWalks        0\n","League        0\n","NewLeague     0\n","Division      0\n","PutOuts       0\n","Assists       0\n","Errors        0\n","Salary       59\n","dtype: int64"]},"metadata":{},"execution_count":552}]},{"cell_type":"code","source":["hitter_df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P3vTEDNXM_5j","executionInfo":{"status":"ok","timestamp":1662885974092,"user_tz":-330,"elapsed":116,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"71b4d430-103e-44cc-96fd-a5ff666e596d"},"execution_count":553,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(322, 20)"]},"metadata":{},"execution_count":553}]},{"cell_type":"code","source":["hitter_df[\"Salary\"].fillna(value=hitter_df[\"Salary\"].mean(), inplace=True)"],"metadata":{"id":"fxwEK8_IO_HI","executionInfo":{"status":"ok","timestamp":1662885974093,"user_tz":-330,"elapsed":107,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}}},"execution_count":554,"outputs":[]},{"cell_type":"code","source":["hitter_df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DHCK6j0ePGow","executionInfo":{"status":"ok","timestamp":1662885974093,"user_tz":-330,"elapsed":106,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"3af5af73-6574-414d-cd5e-3f0ed24b005c"},"execution_count":555,"outputs":[{"output_type":"execute_result","data":{"text/plain":["AtBat        0\n","Hits         0\n","HmRun        0\n","Runs         0\n","RBI          0\n","Walks        0\n","Years        0\n","CAtBat       0\n","CHits        0\n","CHmRun       0\n","CRuns        0\n","CRBI         0\n","CWalks       0\n","League       0\n","NewLeague    0\n","Division     0\n","PutOuts      0\n","Assists      0\n","Errors       0\n","Salary       0\n","dtype: int64"]},"metadata":{},"execution_count":555}]},{"cell_type":"code","source":["hitter_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":361},"id":"sKHhMG8-PK0o","executionInfo":{"status":"ok","timestamp":1662885974094,"user_tz":-330,"elapsed":96,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"c4241573-88fa-46aa-fd0e-d20448b0e40a"},"execution_count":556,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            AtBat        Hits       HmRun        Runs         RBI       Walks  \\\n","count  322.000000  322.000000  322.000000  322.000000  322.000000  322.000000   \n","mean   380.928571  101.024845   10.770186   50.909938   48.027950   38.742236   \n","std    153.404981   46.454741    8.709037   26.024095   26.166895   21.639327   \n","min     16.000000    1.000000    0.000000    0.000000    0.000000    0.000000   \n","25%    255.250000   64.000000    4.000000   30.250000   28.000000   22.000000   \n","50%    379.500000   96.000000    8.000000   48.000000   44.000000   35.000000   \n","75%    512.000000  137.000000   16.000000   69.000000   64.750000   53.000000   \n","max    687.000000  238.000000   40.000000  130.000000  121.000000  105.000000   \n","\n","            Years       CAtBat        CHits      CHmRun        CRuns  \\\n","count  322.000000    322.00000   322.000000  322.000000   322.000000   \n","mean     7.444099   2648.68323   717.571429   69.490683   358.795031   \n","std      4.926087   2324.20587   654.472627   86.266061   334.105886   \n","min      1.000000     19.00000     4.000000    0.000000     1.000000   \n","25%      4.000000    816.75000   209.000000   14.000000   100.250000   \n","50%      6.000000   1928.00000   508.000000   37.500000   247.000000   \n","75%     11.000000   3924.25000  1059.250000   90.000000   526.250000   \n","max     24.000000  14053.00000  4256.000000  548.000000  2165.000000   \n","\n","              CRBI       CWalks      PutOuts     Assists      Errors  \\\n","count   322.000000   322.000000   322.000000  322.000000  322.000000   \n","mean    330.118012   260.239130   288.937888  106.913043    8.040373   \n","std     333.219617   267.058085   280.704614  136.854876    6.368359   \n","min       0.000000     0.000000     0.000000    0.000000    0.000000   \n","25%      88.750000    67.250000   109.250000    7.000000    3.000000   \n","50%     220.500000   170.500000   212.000000   39.500000    6.000000   \n","75%     426.250000   339.250000   325.000000  166.000000   11.000000   \n","max    1659.000000  1566.000000  1378.000000  492.000000   32.000000   \n","\n","            Salary  \n","count   322.000000  \n","mean    535.925882  \n","std     407.557548  \n","min      67.500000  \n","25%     226.250000  \n","50%     535.925882  \n","75%     700.000000  \n","max    2460.000000  "],"text/html":["\n","  <div id=\"df-3929d16b-703d-4dcb-a5e8-c444473f4dbc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AtBat</th>\n","      <th>Hits</th>\n","      <th>HmRun</th>\n","      <th>Runs</th>\n","      <th>RBI</th>\n","      <th>Walks</th>\n","      <th>Years</th>\n","      <th>CAtBat</th>\n","      <th>CHits</th>\n","      <th>CHmRun</th>\n","      <th>CRuns</th>\n","      <th>CRBI</th>\n","      <th>CWalks</th>\n","      <th>PutOuts</th>\n","      <th>Assists</th>\n","      <th>Errors</th>\n","      <th>Salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>322.000000</td>\n","      <td>322.000000</td>\n","      <td>322.000000</td>\n","      <td>322.000000</td>\n","      <td>322.000000</td>\n","      <td>322.000000</td>\n","      <td>322.000000</td>\n","      <td>322.00000</td>\n","      <td>322.000000</td>\n","      <td>322.000000</td>\n","      <td>322.000000</td>\n","      <td>322.000000</td>\n","      <td>322.000000</td>\n","      <td>322.000000</td>\n","      <td>322.000000</td>\n","      <td>322.000000</td>\n","      <td>322.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>380.928571</td>\n","      <td>101.024845</td>\n","      <td>10.770186</td>\n","      <td>50.909938</td>\n","      <td>48.027950</td>\n","      <td>38.742236</td>\n","      <td>7.444099</td>\n","      <td>2648.68323</td>\n","      <td>717.571429</td>\n","      <td>69.490683</td>\n","      <td>358.795031</td>\n","      <td>330.118012</td>\n","      <td>260.239130</td>\n","      <td>288.937888</td>\n","      <td>106.913043</td>\n","      <td>8.040373</td>\n","      <td>535.925882</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>153.404981</td>\n","      <td>46.454741</td>\n","      <td>8.709037</td>\n","      <td>26.024095</td>\n","      <td>26.166895</td>\n","      <td>21.639327</td>\n","      <td>4.926087</td>\n","      <td>2324.20587</td>\n","      <td>654.472627</td>\n","      <td>86.266061</td>\n","      <td>334.105886</td>\n","      <td>333.219617</td>\n","      <td>267.058085</td>\n","      <td>280.704614</td>\n","      <td>136.854876</td>\n","      <td>6.368359</td>\n","      <td>407.557548</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>16.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>19.00000</td>\n","      <td>4.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>67.500000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>255.250000</td>\n","      <td>64.000000</td>\n","      <td>4.000000</td>\n","      <td>30.250000</td>\n","      <td>28.000000</td>\n","      <td>22.000000</td>\n","      <td>4.000000</td>\n","      <td>816.75000</td>\n","      <td>209.000000</td>\n","      <td>14.000000</td>\n","      <td>100.250000</td>\n","      <td>88.750000</td>\n","      <td>67.250000</td>\n","      <td>109.250000</td>\n","      <td>7.000000</td>\n","      <td>3.000000</td>\n","      <td>226.250000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>379.500000</td>\n","      <td>96.000000</td>\n","      <td>8.000000</td>\n","      <td>48.000000</td>\n","      <td>44.000000</td>\n","      <td>35.000000</td>\n","      <td>6.000000</td>\n","      <td>1928.00000</td>\n","      <td>508.000000</td>\n","      <td>37.500000</td>\n","      <td>247.000000</td>\n","      <td>220.500000</td>\n","      <td>170.500000</td>\n","      <td>212.000000</td>\n","      <td>39.500000</td>\n","      <td>6.000000</td>\n","      <td>535.925882</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>512.000000</td>\n","      <td>137.000000</td>\n","      <td>16.000000</td>\n","      <td>69.000000</td>\n","      <td>64.750000</td>\n","      <td>53.000000</td>\n","      <td>11.000000</td>\n","      <td>3924.25000</td>\n","      <td>1059.250000</td>\n","      <td>90.000000</td>\n","      <td>526.250000</td>\n","      <td>426.250000</td>\n","      <td>339.250000</td>\n","      <td>325.000000</td>\n","      <td>166.000000</td>\n","      <td>11.000000</td>\n","      <td>700.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>687.000000</td>\n","      <td>238.000000</td>\n","      <td>40.000000</td>\n","      <td>130.000000</td>\n","      <td>121.000000</td>\n","      <td>105.000000</td>\n","      <td>24.000000</td>\n","      <td>14053.00000</td>\n","      <td>4256.000000</td>\n","      <td>548.000000</td>\n","      <td>2165.000000</td>\n","      <td>1659.000000</td>\n","      <td>1566.000000</td>\n","      <td>1378.000000</td>\n","      <td>492.000000</td>\n","      <td>32.000000</td>\n","      <td>2460.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3929d16b-703d-4dcb-a5e8-c444473f4dbc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3929d16b-703d-4dcb-a5e8-c444473f4dbc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3929d16b-703d-4dcb-a5e8-c444473f4dbc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":556}]},{"cell_type":"code","source":["print(hitter_df[\"League\"].unique())\n","print(hitter_df[\"NewLeague\"].unique())\n","print(hitter_df[\"Division\"].unique())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c_W-wGJnRrzA","executionInfo":{"status":"ok","timestamp":1662885974094,"user_tz":-330,"elapsed":95,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"e8d8c705-a2fa-4d83-ea86-c2511e6e8f8d"},"execution_count":557,"outputs":[{"output_type":"stream","name":"stdout","text":["['A' 'N']\n","['A' 'N']\n","['E' 'W']\n"]}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","  \n","# label_encoder object knows how to understand word labels.\n","le = LabelEncoder()\n","  \n","hitter_df[\"League\"]= le.fit_transform(hitter_df[\"League\"])\n","hitter_df[\"NewLeague\"]= le.fit_transform(hitter_df[\"NewLeague\"])\n","hitter_df[\"Division\"]= le.fit_transform(hitter_df[\"Division\"])\n","  "],"metadata":{"id":"0hjkMWQXPLey","executionInfo":{"status":"ok","timestamp":1662885974094,"user_tz":-330,"elapsed":84,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}}},"execution_count":558,"outputs":[]},{"cell_type":"code","source":["hitter_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":268},"id":"dAOBacVUSTzo","executionInfo":{"status":"ok","timestamp":1662885974095,"user_tz":-330,"elapsed":84,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"21cb1d14-1ccd-4903-d6bc-14668d31a95c"},"execution_count":559,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   AtBat  Hits  HmRun  Runs  RBI  Walks  Years  CAtBat  CHits  CHmRun  CRuns  \\\n","0    293    66      1    30   29     14      1     293     66       1     30   \n","1    315    81      7    24   38     39     14    3449    835      69    321   \n","2    479   130     18    66   72     76      3    1624    457      63    224   \n","3    496   141     20    65   78     37     11    5628   1575     225    828   \n","4    321    87     10    39   42     30      2     396    101      12     48   \n","\n","   CRBI  CWalks  League  NewLeague  Division  PutOuts  Assists  Errors  \\\n","0    29      14       0          0         0      446       33      20   \n","1   414     375       1          1         1      632       43      10   \n","2   266     263       0          0         1      880       82      14   \n","3   838     354       1          1         0      200       11       3   \n","4    46      33       1          1         0      805       40       4   \n","\n","       Salary  \n","0  535.925882  \n","1  475.000000  \n","2  480.000000  \n","3  500.000000  \n","4   91.500000  "],"text/html":["\n","  <div id=\"df-515ffc8c-11bb-4da8-9baa-fc964d7430f2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AtBat</th>\n","      <th>Hits</th>\n","      <th>HmRun</th>\n","      <th>Runs</th>\n","      <th>RBI</th>\n","      <th>Walks</th>\n","      <th>Years</th>\n","      <th>CAtBat</th>\n","      <th>CHits</th>\n","      <th>CHmRun</th>\n","      <th>CRuns</th>\n","      <th>CRBI</th>\n","      <th>CWalks</th>\n","      <th>League</th>\n","      <th>NewLeague</th>\n","      <th>Division</th>\n","      <th>PutOuts</th>\n","      <th>Assists</th>\n","      <th>Errors</th>\n","      <th>Salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>293</td>\n","      <td>66</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>29</td>\n","      <td>14</td>\n","      <td>1</td>\n","      <td>293</td>\n","      <td>66</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>29</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>446</td>\n","      <td>33</td>\n","      <td>20</td>\n","      <td>535.925882</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>315</td>\n","      <td>81</td>\n","      <td>7</td>\n","      <td>24</td>\n","      <td>38</td>\n","      <td>39</td>\n","      <td>14</td>\n","      <td>3449</td>\n","      <td>835</td>\n","      <td>69</td>\n","      <td>321</td>\n","      <td>414</td>\n","      <td>375</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>632</td>\n","      <td>43</td>\n","      <td>10</td>\n","      <td>475.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>479</td>\n","      <td>130</td>\n","      <td>18</td>\n","      <td>66</td>\n","      <td>72</td>\n","      <td>76</td>\n","      <td>3</td>\n","      <td>1624</td>\n","      <td>457</td>\n","      <td>63</td>\n","      <td>224</td>\n","      <td>266</td>\n","      <td>263</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>880</td>\n","      <td>82</td>\n","      <td>14</td>\n","      <td>480.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>496</td>\n","      <td>141</td>\n","      <td>20</td>\n","      <td>65</td>\n","      <td>78</td>\n","      <td>37</td>\n","      <td>11</td>\n","      <td>5628</td>\n","      <td>1575</td>\n","      <td>225</td>\n","      <td>828</td>\n","      <td>838</td>\n","      <td>354</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>200</td>\n","      <td>11</td>\n","      <td>3</td>\n","      <td>500.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>321</td>\n","      <td>87</td>\n","      <td>10</td>\n","      <td>39</td>\n","      <td>42</td>\n","      <td>30</td>\n","      <td>2</td>\n","      <td>396</td>\n","      <td>101</td>\n","      <td>12</td>\n","      <td>48</td>\n","      <td>46</td>\n","      <td>33</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>805</td>\n","      <td>40</td>\n","      <td>4</td>\n","      <td>91.500000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-515ffc8c-11bb-4da8-9baa-fc964d7430f2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-515ffc8c-11bb-4da8-9baa-fc964d7430f2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-515ffc8c-11bb-4da8-9baa-fc964d7430f2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":559}]},{"cell_type":"code","source":["X = hitter_df.drop(\"Salary\", axis=1)\n","Y = hitter_df.iloc[:,-1]"],"metadata":{"id":"uIeiJ7KnS5aX","executionInfo":{"status":"ok","timestamp":1662885974095,"user_tz":-330,"elapsed":83,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}}},"execution_count":560,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","X_scaled = scaler.fit_transform(X)\n","Y = np.asarray(Y).reshape(-1,1)"],"metadata":{"id":"vNvOItb5T5d7","executionInfo":{"status":"ok","timestamp":1662885974095,"user_tz":-330,"elapsed":82,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}}},"execution_count":561,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train, x_test, y_train, y_test = train_test_split(X_scaled, Y, test_size=0.3, random_state=42)\n","\n","print(\"x_train.shape = \", x_train.shape)\n","print(\"x_test.shape = \", x_test.shape)\n","print(\"y_train.shape = \", y_train.shape)\n","print(\"y_test.shape = \", y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J04fu10pUDGX","executionInfo":{"status":"ok","timestamp":1662885974096,"user_tz":-330,"elapsed":82,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"a2efc8c8-6e0c-4b72-95e7-e2e41d6fdde2"},"execution_count":562,"outputs":[{"output_type":"stream","name":"stdout","text":["x_train.shape =  (225, 19)\n","x_test.shape =  (97, 19)\n","y_train.shape =  (225, 1)\n","y_test.shape =  (97, 1)\n"]}]},{"cell_type":"code","source":["lr = LinearRegression()\n","\n","lr.fit(x_train, y_train)\n","y_pred_lr = lr.predict(x_test)\n","print(y_pred_lr[0:5])\n","print(\"Linear Regression R2_Score = \", r2_score(y_test, y_pred_lr))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TrVbvhtlVCpG","executionInfo":{"status":"ok","timestamp":1662885974096,"user_tz":-330,"elapsed":71,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"a7505166-1c22-4388-a486-8ef62f3ec346"},"execution_count":563,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 345.10809637]\n"," [ 817.48056688]\n"," [ 335.71487498]\n"," [ 658.30896909]\n"," [1086.7279634 ]]\n","Linear Regression R2_Score =  0.48395666644591107\n"]}]},{"cell_type":"code","source":["rdg = Ridge(alpha=0.5748)\n","\n","rdg.fit(x_train, y_train)\n","y_pred_rdg = rdg.predict(x_test)\n","print(y_pred_rdg[0:5])\n","print(\"Ridge Regression R2_Score = \", r2_score(y_test, y_pred_rdg))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NYoV5ji4W6Jf","executionInfo":{"status":"ok","timestamp":1662885974097,"user_tz":-330,"elapsed":62,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"ef10a7fd-a88b-40e4-ef0e-1cc8e402e285"},"execution_count":564,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 345.08070253]\n"," [ 773.38777456]\n"," [ 335.41147565]\n"," [ 659.63732308]\n"," [1042.59918452]]\n","Ridge Regression R2_Score =  0.48465284254618246\n"]}]},{"cell_type":"code","source":["lss = Lasso(alpha=0.5748)\n","\n","lss.fit(x_train, y_train)\n","y_pred_lss = lss.predict(x_test)\n","print(y_pred_lss[0:5])\n","print(\"Lasso Regression R2_Score = \", r2_score(y_test, y_pred_lss))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pf-knp_6ZFWG","executionInfo":{"status":"ok","timestamp":1662885974097,"user_tz":-330,"elapsed":52,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"004a4a5e-ae16-4c35-c2c5-cf5f798b8fe6"},"execution_count":565,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 346.95633946  763.02161574  334.03321397  661.81103114 1036.16089008]\n","Lasso Regression R2_Score =  0.48541355768744354\n"]}]},{"cell_type":"markdown","source":["### Question 3\n"],"metadata":{"id":"smCaOQ4Sh3tX"}},{"cell_type":"code","source":["boston_df = pd.read_csv(\"/content/BostonHousing.csv\")"],"metadata":{"id":"abgwijAXh9Ub","executionInfo":{"status":"ok","timestamp":1662885974098,"user_tz":-330,"elapsed":43,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}}},"execution_count":566,"outputs":[]},{"cell_type":"code","source":["boston_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"V_4g3-6ajNEV","executionInfo":{"status":"ok","timestamp":1662885974098,"user_tz":-330,"elapsed":42,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"eeef13be-be32-4cb2-d899-b722f1269f2d"},"execution_count":567,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      crim    zn  indus  chas    nox     rm   age     dis  rad  tax  ptratio  \\\n","0  0.00632  18.0   2.31     0  0.538  6.575  65.2  4.0900    1  296     15.3   \n","1  0.02731   0.0   7.07     0  0.469  6.421  78.9  4.9671    2  242     17.8   \n","2  0.02729   0.0   7.07     0  0.469  7.185  61.1  4.9671    2  242     17.8   \n","3  0.03237   0.0   2.18     0  0.458  6.998  45.8  6.0622    3  222     18.7   \n","4  0.06905   0.0   2.18     0  0.458  7.147  54.2  6.0622    3  222     18.7   \n","\n","        b  lstat  medv  \n","0  396.90   4.98  24.0  \n","1  396.90   9.14  21.6  \n","2  392.83   4.03  34.7  \n","3  394.63   2.94  33.4  \n","4  396.90   5.33  36.2  "],"text/html":["\n","  <div id=\"df-a59c127c-2308-41b7-85e4-b64f55b336ec\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crim</th>\n","      <th>zn</th>\n","      <th>indus</th>\n","      <th>chas</th>\n","      <th>nox</th>\n","      <th>rm</th>\n","      <th>age</th>\n","      <th>dis</th>\n","      <th>rad</th>\n","      <th>tax</th>\n","      <th>ptratio</th>\n","      <th>b</th>\n","      <th>lstat</th>\n","      <th>medv</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.00632</td>\n","      <td>18.0</td>\n","      <td>2.31</td>\n","      <td>0</td>\n","      <td>0.538</td>\n","      <td>6.575</td>\n","      <td>65.2</td>\n","      <td>4.0900</td>\n","      <td>1</td>\n","      <td>296</td>\n","      <td>15.3</td>\n","      <td>396.90</td>\n","      <td>4.98</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.02731</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0</td>\n","      <td>0.469</td>\n","      <td>6.421</td>\n","      <td>78.9</td>\n","      <td>4.9671</td>\n","      <td>2</td>\n","      <td>242</td>\n","      <td>17.8</td>\n","      <td>396.90</td>\n","      <td>9.14</td>\n","      <td>21.6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.02729</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0</td>\n","      <td>0.469</td>\n","      <td>7.185</td>\n","      <td>61.1</td>\n","      <td>4.9671</td>\n","      <td>2</td>\n","      <td>242</td>\n","      <td>17.8</td>\n","      <td>392.83</td>\n","      <td>4.03</td>\n","      <td>34.7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.03237</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0</td>\n","      <td>0.458</td>\n","      <td>6.998</td>\n","      <td>45.8</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222</td>\n","      <td>18.7</td>\n","      <td>394.63</td>\n","      <td>2.94</td>\n","      <td>33.4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.06905</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0</td>\n","      <td>0.458</td>\n","      <td>7.147</td>\n","      <td>54.2</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222</td>\n","      <td>18.7</td>\n","      <td>396.90</td>\n","      <td>5.33</td>\n","      <td>36.2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a59c127c-2308-41b7-85e4-b64f55b336ec')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a59c127c-2308-41b7-85e4-b64f55b336ec button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a59c127c-2308-41b7-85e4-b64f55b336ec');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":567}]},{"cell_type":"code","source":["boston_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":361},"id":"bQyQMGI2jOlE","executionInfo":{"status":"ok","timestamp":1662885974099,"user_tz":-330,"elapsed":42,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"012061bb-1509-4e3d-a7c8-2ddc39653db9"},"execution_count":568,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             crim          zn       indus        chas         nox          rm  \\\n","count  506.000000  506.000000  506.000000  506.000000  506.000000  506.000000   \n","mean     3.613524   11.363636   11.136779    0.069170    0.554695    6.284634   \n","std      8.601545   23.322453    6.860353    0.253994    0.115878    0.702617   \n","min      0.006320    0.000000    0.460000    0.000000    0.385000    3.561000   \n","25%      0.082045    0.000000    5.190000    0.000000    0.449000    5.885500   \n","50%      0.256510    0.000000    9.690000    0.000000    0.538000    6.208500   \n","75%      3.677083   12.500000   18.100000    0.000000    0.624000    6.623500   \n","max     88.976200  100.000000   27.740000    1.000000    0.871000    8.780000   \n","\n","              age         dis         rad         tax     ptratio           b  \\\n","count  506.000000  506.000000  506.000000  506.000000  506.000000  506.000000   \n","mean    68.574901    3.795043    9.549407  408.237154   18.455534  356.674032   \n","std     28.148861    2.105710    8.707259  168.537116    2.164946   91.294864   \n","min      2.900000    1.129600    1.000000  187.000000   12.600000    0.320000   \n","25%     45.025000    2.100175    4.000000  279.000000   17.400000  375.377500   \n","50%     77.500000    3.207450    5.000000  330.000000   19.050000  391.440000   \n","75%     94.075000    5.188425   24.000000  666.000000   20.200000  396.225000   \n","max    100.000000   12.126500   24.000000  711.000000   22.000000  396.900000   \n","\n","            lstat        medv  \n","count  506.000000  506.000000  \n","mean    12.653063   22.532806  \n","std      7.141062    9.197104  \n","min      1.730000    5.000000  \n","25%      6.950000   17.025000  \n","50%     11.360000   21.200000  \n","75%     16.955000   25.000000  \n","max     37.970000   50.000000  "],"text/html":["\n","  <div id=\"df-1dc06e5a-0c18-42bb-ac72-dc40b44dc773\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crim</th>\n","      <th>zn</th>\n","      <th>indus</th>\n","      <th>chas</th>\n","      <th>nox</th>\n","      <th>rm</th>\n","      <th>age</th>\n","      <th>dis</th>\n","      <th>rad</th>\n","      <th>tax</th>\n","      <th>ptratio</th>\n","      <th>b</th>\n","      <th>lstat</th>\n","      <th>medv</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.613524</td>\n","      <td>11.363636</td>\n","      <td>11.136779</td>\n","      <td>0.069170</td>\n","      <td>0.554695</td>\n","      <td>6.284634</td>\n","      <td>68.574901</td>\n","      <td>3.795043</td>\n","      <td>9.549407</td>\n","      <td>408.237154</td>\n","      <td>18.455534</td>\n","      <td>356.674032</td>\n","      <td>12.653063</td>\n","      <td>22.532806</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>8.601545</td>\n","      <td>23.322453</td>\n","      <td>6.860353</td>\n","      <td>0.253994</td>\n","      <td>0.115878</td>\n","      <td>0.702617</td>\n","      <td>28.148861</td>\n","      <td>2.105710</td>\n","      <td>8.707259</td>\n","      <td>168.537116</td>\n","      <td>2.164946</td>\n","      <td>91.294864</td>\n","      <td>7.141062</td>\n","      <td>9.197104</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.006320</td>\n","      <td>0.000000</td>\n","      <td>0.460000</td>\n","      <td>0.000000</td>\n","      <td>0.385000</td>\n","      <td>3.561000</td>\n","      <td>2.900000</td>\n","      <td>1.129600</td>\n","      <td>1.000000</td>\n","      <td>187.000000</td>\n","      <td>12.600000</td>\n","      <td>0.320000</td>\n","      <td>1.730000</td>\n","      <td>5.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.082045</td>\n","      <td>0.000000</td>\n","      <td>5.190000</td>\n","      <td>0.000000</td>\n","      <td>0.449000</td>\n","      <td>5.885500</td>\n","      <td>45.025000</td>\n","      <td>2.100175</td>\n","      <td>4.000000</td>\n","      <td>279.000000</td>\n","      <td>17.400000</td>\n","      <td>375.377500</td>\n","      <td>6.950000</td>\n","      <td>17.025000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.256510</td>\n","      <td>0.000000</td>\n","      <td>9.690000</td>\n","      <td>0.000000</td>\n","      <td>0.538000</td>\n","      <td>6.208500</td>\n","      <td>77.500000</td>\n","      <td>3.207450</td>\n","      <td>5.000000</td>\n","      <td>330.000000</td>\n","      <td>19.050000</td>\n","      <td>391.440000</td>\n","      <td>11.360000</td>\n","      <td>21.200000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3.677083</td>\n","      <td>12.500000</td>\n","      <td>18.100000</td>\n","      <td>0.000000</td>\n","      <td>0.624000</td>\n","      <td>6.623500</td>\n","      <td>94.075000</td>\n","      <td>5.188425</td>\n","      <td>24.000000</td>\n","      <td>666.000000</td>\n","      <td>20.200000</td>\n","      <td>396.225000</td>\n","      <td>16.955000</td>\n","      <td>25.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>88.976200</td>\n","      <td>100.000000</td>\n","      <td>27.740000</td>\n","      <td>1.000000</td>\n","      <td>0.871000</td>\n","      <td>8.780000</td>\n","      <td>100.000000</td>\n","      <td>12.126500</td>\n","      <td>24.000000</td>\n","      <td>711.000000</td>\n","      <td>22.000000</td>\n","      <td>396.900000</td>\n","      <td>37.970000</td>\n","      <td>50.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1dc06e5a-0c18-42bb-ac72-dc40b44dc773')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1dc06e5a-0c18-42bb-ac72-dc40b44dc773 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1dc06e5a-0c18-42bb-ac72-dc40b44dc773');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":568}]},{"cell_type":"code","source":["boston_df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XeFSodhhjQMN","executionInfo":{"status":"ok","timestamp":1662885974099,"user_tz":-330,"elapsed":41,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"881b9fc1-0a5b-4339-bb33-cda1d40eac96"},"execution_count":569,"outputs":[{"output_type":"execute_result","data":{"text/plain":["crim       0\n","zn         0\n","indus      0\n","chas       0\n","nox        0\n","rm         0\n","age        0\n","dis        0\n","rad        0\n","tax        0\n","ptratio    0\n","b          0\n","lstat      0\n","medv       0\n","dtype: int64"]},"metadata":{},"execution_count":569}]},{"cell_type":"code","source":["X = boston_df.drop(\"medv\", axis=1)\n","Y = boston_df.iloc[:,-1]"],"metadata":{"id":"QLBGLoQHjrp4","executionInfo":{"status":"ok","timestamp":1662885974099,"user_tz":-330,"elapsed":30,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}}},"execution_count":570,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","X_scaled = scaler.fit_transform(X)\n","Y = np.asarray(Y).reshape(-1,1)"],"metadata":{"id":"ngZZ3bmonlVl","executionInfo":{"status":"ok","timestamp":1662885974100,"user_tz":-330,"elapsed":31,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}}},"execution_count":571,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import RidgeCV\n","clf = RidgeCV(alphas=[0.001,0.01,1,10])\n","clf.fit(X_scaled,Y)\n","clf.score(X_scaled,Y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y-MPKhQcvUCp","executionInfo":{"status":"ok","timestamp":1662886187148,"user_tz":-330,"elapsed":498,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"135477c8-86ea-4aff-cb97-1532d90ebb47"},"execution_count":591,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7406304514762468"]},"metadata":{},"execution_count":591}]},{"cell_type":"code","source":["from sklearn.linear_model import LassoCV\n","clf = LassoCV(alphas=[0.001,0.01,1,10])\n","clf.fit(X_scaled,Y)\n","clf.score(X_scaled,Y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5tN6rdMGveXr","executionInfo":{"status":"ok","timestamp":1662886227555,"user_tz":-330,"elapsed":863,"user":{"displayName":"Nitansh Jain","userId":"16132165384365515816"}},"outputId":"98dd0542-73c6-4d67-fbd9-cea1ef417195"},"execution_count":592,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_coordinate_descent.py:1571: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"]},{"output_type":"execute_result","data":{"text/plain":["0.7405616272873865"]},"metadata":{},"execution_count":592}]}]}